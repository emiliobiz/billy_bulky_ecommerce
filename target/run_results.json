{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.1", "generated_at": "2023-11-20T17:54:59.067459Z", "invocation_id": "e456e668-1282-468f-9173-6757e27e7c40", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T17:54:54.674702Z", "completed_at": "2023-11-20T17:54:54.699583Z"}, {"name": "execute", "started_at": "2023-11-20T17:54:54.718583Z", "completed_at": "2023-11-20T17:54:57.427166Z"}], "thread_id": "Thread-9", "execution_time": 3.212623119354248, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b075d2-0001-824a-0000-0004d8beb2b9"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.billy_bulky.products", "compiled": true, "compiled_code": "WITH  __dbt__cte__staging_shopify__orders as (\nWITH orders AS (\n    SELECT * FROM SHOPIFY.PUBLIC.orders\n)\n\nSELECT\n    ORDER_ID\n    , CUSTOMER_ID\n    , PRODUCT_ID\n    , QUANTITY\n    , ORDER_DATE\n    , STATUS\nFROM orders\n),  __dbt__cte__staging_shopify__products as (\nWITH products AS (\n    SELECT * FROM SHOPIFY.PUBLIC.products\n)\n\nSELECT\n    PRODUCT_ID\n    , NAME\n    , CATEGORY\n    , PRICE\n    , STOCK_LEVEL\nFROM products\n), orders AS (\n    SELECT * FROM __dbt__cte__staging_shopify__orders\n)\n\n, products AS (\n    SELECT * FROM __dbt__cte__staging_shopify__products\n)\n\n\n, product_sales AS (\n    SELECT\n        o.PRODUCT_ID\n        , SUM(o.QUANTITY) AS total_units_sold\n        , SUM(o.QUANTITY * p.PRICE) AS total_sales_value\n    FROM orders o\n    JOIN products p ON o.PRODUCT_ID = p.PRODUCT_ID\n    WHERE o.STATUS NOT IN ('cancelled')\n    GROUP BY o.PRODUCT_ID\n)\n\n, final AS (\n    SELECT\n    p.PRODUCT_ID\n    , p.NAME\n    , p.CATEGORY\n    , p.PRICE\n    , COALESCE(ps.total_units_sold, 0) AS total_units_sold\n    , COALESCE(ps.total_sales_value, 0) AS total_sales_value\nFROM products p\nLEFT JOIN product_sales ps ON p.PRODUCT_ID = ps.PRODUCT_ID)\n\nSELECT * FROM final", "relation_name": "E_COMMERCE.marts.products"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T17:54:54.661692Z", "completed_at": "2023-11-20T17:54:54.692286Z"}, {"name": "execute", "started_at": "2023-11-20T17:54:54.712478Z", "completed_at": "2023-11-20T17:54:57.612209Z"}], "thread_id": "Thread-8", "execution_time": 3.413213014602661, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b075d2-0001-831c-0004-d8be000132f6"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.billy_bulky.int_sales_trends", "compiled": true, "compiled_code": "WITH  __dbt__cte__staging_shopify__orders as (\nWITH orders AS (\n    SELECT * FROM SHOPIFY.PUBLIC.orders\n)\n\nSELECT\n    ORDER_ID\n    , CUSTOMER_ID\n    , PRODUCT_ID\n    , QUANTITY\n    , ORDER_DATE\n    , STATUS\nFROM orders\n),  __dbt__cte__staging_shopify__products as (\nWITH products AS (\n    SELECT * FROM SHOPIFY.PUBLIC.products\n)\n\nSELECT\n    PRODUCT_ID\n    , NAME\n    , CATEGORY\n    , PRICE\n    , STOCK_LEVEL\nFROM products\n), orders AS (\n    SELECT * FROM __dbt__cte__staging_shopify__orders\n)\n\n, products AS (\n    SELECT * FROM __dbt__cte__staging_shopify__products\n)\n\n, daily_sales AS (\n    SELECT\n        DATE(ORDER_DATE) AS sale_date\n        , COUNT(DISTINCT ORDER_ID) AS total_orders\n        , SUM(QUANTITY) AS total_units_sold\n        , SUM(QUANTITY * PRICE) AS total_sales_value\n    FROM orders AS o\n    JOIN products AS p ON o.PRODUCT_ID = p.PRODUCT_ID\n    WHERE o.STATUS NOT IN ('cancelled') \n    GROUP BY sale_date\n)\n\n, weekly_sales AS (\n    SELECT\n        DATE_TRUNC('week', sale_date) AS sale_week\n        , SUM(total_orders) AS weekly_orders\n        , SUM(total_units_sold) AS weekly_units_sold\n        , SUM(total_sales_value) AS weekly_sales_value\n    FROM daily_sales\n    GROUP BY sale_week\n)\n\n, monthly_sales AS (\n    SELECT\n        DATE_TRUNC('month', sale_date) AS sale_month\n        , SUM(total_orders) AS monthly_orders\n        , SUM(total_units_sold) AS monthly_units_sold\n        , SUM(total_sales_value) AS monthly_sales_value\n    FROM daily_sales\n    GROUP BY sale_month\n)\n\n, yearly_sales AS (\n    SELECT\n        DATE_TRUNC('year', sale_date) AS sale_year\n        , SUM(total_orders) AS yearly_orders\n        , SUM(total_units_sold) AS yearly_units_sold\n        , SUM(total_sales_value) AS yearly_sales_value\n    FROM daily_sales\n    GROUP BY sale_year\n)\n\nSELECT\n    d.sale_date\n    , d.total_orders AS daily_orders\n    , d.total_units_sold AS daily_units_sold\n    , d.total_sales_value AS daily_sales_value\n    , w.weekly_orders\n    , w.weekly_units_sold\n    , w.weekly_sales_value\n    , m.monthly_orders\n    , m.monthly_units_sold\n    , m.monthly_sales_value\n    , y.yearly_orders\n    , y.yearly_units_sold\n    , y.yearly_sales_value\nFROM daily_sales d\nLEFT JOIN weekly_sales w ON DATE_TRUNC('week', d.sale_date) = w.sale_week\nLEFT JOIN monthly_sales m ON DATE_TRUNC('month', d.sale_date) = m.sale_month\nLEFT JOIN yearly_sales y ON DATE_TRUNC('year', d.sale_date) = y.sale_year", "relation_name": "E_COMMERCE.intermediate.int_sales_trends"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T17:54:54.634420Z", "completed_at": "2023-11-20T17:54:54.692612Z"}, {"name": "execute", "started_at": "2023-11-20T17:54:54.714586Z", "completed_at": "2023-11-20T17:54:57.622814Z"}], "thread_id": "Thread-6", "execution_time": 3.41792893409729, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b075d2-0001-834e-0004-d8be00011326"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.billy_bulky.int_customers_segmentation", "compiled": true, "compiled_code": "WITH  __dbt__cte__staging_shopify__customers as (\nWITH customers AS (\n    SELECT * FROM SHOPIFY.PUBLIC.customers\n)\n\nSELECT\n    CUSTOMER_ID\n    , FIRST_NAME\n    , LAST_NAME\n    , EMAIL\n    , JOIN_DATE\n    , COUNTRY\nFROM customers\n),  __dbt__cte__staging_shopify__orders as (\nWITH orders AS (\n    SELECT * FROM SHOPIFY.PUBLIC.orders\n)\n\nSELECT\n    ORDER_ID\n    , CUSTOMER_ID\n    , PRODUCT_ID\n    , QUANTITY\n    , ORDER_DATE\n    , STATUS\nFROM orders\n),  __dbt__cte__staging_shopify__products as (\nWITH products AS (\n    SELECT * FROM SHOPIFY.PUBLIC.products\n)\n\nSELECT\n    PRODUCT_ID\n    , NAME\n    , CATEGORY\n    , PRICE\n    , STOCK_LEVEL\nFROM products\n), customers AS (\n    SELECT * FROM __dbt__cte__staging_shopify__customers\n)\n\n, orders AS (\n    SELECT * FROM __dbt__cte__staging_shopify__orders\n)\n\n, products AS (\n    SELECT * FROM __dbt__cte__staging_shopify__products\n)\n\n, order_aggregates AS (\n    SELECT\n        o.CUSTOMER_ID\n        , COUNT(DISTINCT o.ORDER_ID) AS frequency\n        , SUM(o.QUANTITY * p.PRICE) AS monetary\n        , AVG(o.QUANTITY * p.PRICE) AS average_order_value\n        , MAX(o.ORDER_DATE) AS last_purchase_date\n        , COUNT(CASE WHEN o.STATUS = 'cancelled' THEN 1 END) AS cancelled_orders\n        , COUNT(*) AS total_orders\n    FROM orders o\n    JOIN products p ON o.PRODUCT_ID = p.PRODUCT_ID\n    GROUP BY o.CUSTOMER_ID\n)\n\n, customer_tenure AS (\n    SELECT\n        CUSTOMER_ID\n        , JOIN_DATE\n        , CURRENT_DATE - JOIN_DATE AS tenure\n    FROM customers\n)\n\n, customer_recency AS (\n    SELECT\n        CUSTOMER_ID\n        , CURRENT_DATE - last_purchase_date AS recency\n    FROM order_aggregates\n)\n\n, final AS (\n    SELECT\n        c.CUSTOMER_ID\n        , c.FIRST_NAME\n        , c.LAST_NAME\n        , c.EMAIL\n        , c.JOIN_DATE\n        , c.COUNTRY\n        , o.frequency\n        , o.monetary\n        , o.average_order_value\n        , o.cancelled_orders\n        , o.total_orders\n        , CASE \n            WHEN o.total_orders > 0 THEN ROUND((o.cancelled_orders::FLOAT / o.total_orders) * 100, 2) \n            ELSE 0 \n          END AS cancellation_rate\n        , r.recency\n        , t.tenure\n    FROM customer_tenure t\n    JOIN customers c ON t.CUSTOMER_ID = c.CUSTOMER_ID\n    JOIN order_aggregates o ON c.CUSTOMER_ID = o.CUSTOMER_ID\n    JOIN customer_recency r ON c.CUSTOMER_ID = r.CUSTOMER_ID\n)\n\nSELECT * FROM final", "relation_name": "E_COMMERCE.intermediate.int_customers_segmentation"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T17:54:54.620503Z", "completed_at": "2023-11-20T17:54:54.667980Z"}, {"name": "execute", "started_at": "2023-11-20T17:54:54.692918Z", "completed_at": "2023-11-20T17:54:57.614850Z"}], "thread_id": "Thread-5", "execution_time": 3.4224741458892822, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b075d2-0001-831c-0004-d8be000132fa"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.billy_bulky.customers", "compiled": true, "compiled_code": "WITH  __dbt__cte__staging_shopify__customers as (\nWITH customers AS (\n    SELECT * FROM SHOPIFY.PUBLIC.customers\n)\n\nSELECT\n    CUSTOMER_ID\n    , FIRST_NAME\n    , LAST_NAME\n    , EMAIL\n    , JOIN_DATE\n    , COUNTRY\nFROM customers\n),  __dbt__cte__staging_shopify__orders as (\nWITH orders AS (\n    SELECT * FROM SHOPIFY.PUBLIC.orders\n)\n\nSELECT\n    ORDER_ID\n    , CUSTOMER_ID\n    , PRODUCT_ID\n    , QUANTITY\n    , ORDER_DATE\n    , STATUS\nFROM orders\n),  __dbt__cte__staging_shopify__products as (\nWITH products AS (\n    SELECT * FROM SHOPIFY.PUBLIC.products\n)\n\nSELECT\n    PRODUCT_ID\n    , NAME\n    , CATEGORY\n    , PRICE\n    , STOCK_LEVEL\nFROM products\n), customers AS (\n    SELECT * FROM __dbt__cte__staging_shopify__customers\n)\n\n, orders AS (\n    SELECT * FROM __dbt__cte__staging_shopify__orders\n)\n\n, products AS (\n    SELECT * FROM __dbt__cte__staging_shopify__products\n)\n\n, source AS (\n    SELECT\n        c.CUSTOMER_ID\n        , c.FIRST_NAME\n        , c.LAST_NAME\n        , c.EMAIL\n        , c.JOIN_DATE\n        , c.COUNTRY\n        , COUNT(o.ORDER_ID) AS total_orders\n        , SUM(o.QUANTITY * p.PRICE) AS total_spent\n    FROM customers c\n    LEFT JOIN orders o ON c.CUSTOMER_ID = o.CUSTOMER_ID\n    LEFT JOIN products p ON o.PRODUCT_ID = p.PRODUCT_ID\n    WHERE o.STATUS NOT IN ('cancelled')\n    GROUP BY c.CUSTOMER_ID, c.FIRST_NAME, c.LAST_NAME, c.EMAIL, c.JOIN_DATE, c.COUNTRY\n)\n\n, final AS (\nSELECT\n    s.CUSTOMER_ID\n    , s.FIRST_NAME\n    , s.LAST_NAME\n    , s.EMAIL\n    , s.JOIN_DATE\n    , s.COUNTRY\n    , s.total_orders\n    , s.total_spent\n    , CASE WHEN s.total_spent > 1000 THEN 'VIP' ELSE 'Regular' END AS customer_segment \nFROM source s\n)\n\nSELECT * FROM final", "relation_name": "E_COMMERCE.marts.customers"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T17:54:54.650800Z", "completed_at": "2023-11-20T17:54:54.699210Z"}, {"name": "execute", "started_at": "2023-11-20T17:54:54.716841Z", "completed_at": "2023-11-20T17:54:57.629583Z"}], "thread_id": "Thread-7", "execution_time": 3.420260190963745, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b075d2-0001-834e-0004-d8be00011322"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.billy_bulky.int_products_performance", "compiled": true, "compiled_code": "WITH  __dbt__cte__staging_shopify__orders as (\nWITH orders AS (\n    SELECT * FROM SHOPIFY.PUBLIC.orders\n)\n\nSELECT\n    ORDER_ID\n    , CUSTOMER_ID\n    , PRODUCT_ID\n    , QUANTITY\n    , ORDER_DATE\n    , STATUS\nFROM orders\n),  __dbt__cte__staging_shopify__products as (\nWITH products AS (\n    SELECT * FROM SHOPIFY.PUBLIC.products\n)\n\nSELECT\n    PRODUCT_ID\n    , NAME\n    , CATEGORY\n    , PRICE\n    , STOCK_LEVEL\nFROM products\n), orders AS (\n    SELECT * FROM __dbt__cte__staging_shopify__orders\n)\n\n, products AS (\n    SELECT * FROM __dbt__cte__staging_shopify__products\n)\n\n, product_sales AS (\n    SELECT\n        o.PRODUCT_ID\n        , COUNT(DISTINCT o.ORDER_ID) AS total_sales\n        , SUM(o.QUANTITY) AS total_units_sold\n        , SUM(o.QUANTITY * p.PRICE) AS total_sales_value\n    FROM orders o\n    INNER JOIN products p ON o.PRODUCT_ID = p.PRODUCT_ID\n    WHERE o.STATUS NOT IN ('cancelled') \n    GROUP BY o.PRODUCT_ID\n)\n\n, product_averages AS (\n    SELECT\n        PRODUCT_ID\n        , (total_sales_value / NULLIF(total_units_sold, 0)) AS average_sale_price\n    FROM product_sales\n)\n\n, product_stock_turnover AS (\n    SELECT\n        p.PRODUCT_ID\n        , p.STOCK_LEVEL\n        , (total_units_sold / NULLIF(p.STOCK_LEVEL, 0)) AS turnover_rate\n    FROM product_sales ps\n    INNER JOIN products p ON ps.PRODUCT_ID = p.PRODUCT_ID\n)\n\n, final AS (\n    SELECT\n    p.PRODUCT_ID\n    , p.NAME\n    , p.CATEGORY\n    , p.PRICE\n    , pa.average_sale_price\n    , ps.total_sales\n    , ps.total_units_sold\n    , ps.total_sales_value\n    , pst.turnover_rate\n    , p.STOCK_LEVEL\nFROM products p\nLEFT JOIN product_sales ps ON p.PRODUCT_ID = ps.PRODUCT_ID\nLEFT JOIN product_averages pa ON p.PRODUCT_ID = pa.PRODUCT_ID\nLEFT JOIN product_stock_turnover pst ON p.PRODUCT_ID = pst.PRODUCT_ID\n)\n\nSELECT * FROM final", "relation_name": "E_COMMERCE.intermediate.int_products_performance"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T17:54:54.683031Z", "completed_at": "2023-11-20T17:54:54.711688Z"}, {"name": "execute", "started_at": "2023-11-20T17:54:54.721733Z", "completed_at": "2023-11-20T17:54:58.540165Z"}], "thread_id": "Thread-10", "execution_time": 4.429795980453491, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b075d2-0001-8184-0004-d8be000102fe"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.billy_bulky.sales", "compiled": true, "compiled_code": "WITH  __dbt__cte__staging_shopify__customers as (\nWITH customers AS (\n    SELECT * FROM SHOPIFY.PUBLIC.customers\n)\n\nSELECT\n    CUSTOMER_ID\n    , FIRST_NAME\n    , LAST_NAME\n    , EMAIL\n    , JOIN_DATE\n    , COUNTRY\nFROM customers\n),  __dbt__cte__staging_shopify__orders as (\nWITH orders AS (\n    SELECT * FROM SHOPIFY.PUBLIC.orders\n)\n\nSELECT\n    ORDER_ID\n    , CUSTOMER_ID\n    , PRODUCT_ID\n    , QUANTITY\n    , ORDER_DATE\n    , STATUS\nFROM orders\n),  __dbt__cte__staging_shopify__products as (\nWITH products AS (\n    SELECT * FROM SHOPIFY.PUBLIC.products\n)\n\nSELECT\n    PRODUCT_ID\n    , NAME\n    , CATEGORY\n    , PRICE\n    , STOCK_LEVEL\nFROM products\n), customers AS (\n    SELECT * FROM __dbt__cte__staging_shopify__customers\n)\n\n, orders AS (\n    SELECT * FROM __dbt__cte__staging_shopify__orders\n)\n\n, products AS (\n    SELECT * FROM __dbt__cte__staging_shopify__products\n)\n\n\n\n, enriched_orders AS (\n    SELECT\n        o.ORDER_ID\n        , o.CUSTOMER_ID\n        , o.PRODUCT_ID\n        , o.QUANTITY\n        , o.ORDER_DATE\n        , o.STATUS\n        , p.CATEGORY\n        , p.PRICE AS unit_price\n        , (o.QUANTITY * p.PRICE) AS total_price\n        , c.COUNTRY\n    FROM orders o\n    JOIN products p ON o.PRODUCT_ID = p.PRODUCT_ID\n    JOIN customers c ON o.CUSTOMER_ID = c.CUSTOMER_ID\n    WHERE o.STATUS NOT IN ('cancelled') \n)\n\n, final AS (\nSELECT\n    e.ORDER_ID\n    , e.CUSTOMER_ID\n    , e.PRODUCT_ID\n    , e.QUANTITY\n    , e.ORDER_DATE\n    , e.STATUS\n    , e.CATEGORY\n    , e.unit_price\n    , e.total_price\n    , e.COUNTRY\nFROM enriched_orders e\n)\n\nSELECT * FROM final", "relation_name": "E_COMMERCE.marts.sales"}], "elapsed_time": 7.86149787902832, "args": {"log_format": "default", "which": "run", "cache_selected_only": false, "show_resource_report": false, "use_colors_file": true, "macro_debugging": false, "project_dir": "/Users/bitlevi/Documents/billy_bulky_ecommerce/billy_bulky_ecommerce", "write_json": true, "indirect_selection": "eager", "introspect": true, "static_parser": true, "partial_parse_file_diff": true, "send_anonymous_usage_stats": true, "strict_mode": false, "version_check": true, "warn_error_options": {"include": [], "exclude": []}, "log_level": "info", "log_file_max_bytes": 10485760, "quiet": false, "defer": false, "vars": {}, "partial_parse": true, "select": [], "exclude": [], "log_format_file": "debug", "invocation_command": "dbt run", "use_colors": true, "log_path": "/Users/bitlevi/Documents/billy_bulky_ecommerce/billy_bulky_ecommerce/logs", "printer_width": 80, "favor_state": false, "populate_cache": true, "enable_legacy_logger": false, "print": true, "log_level_file": "debug", "profiles_dir": "/Users/bitlevi/.dbt"}}